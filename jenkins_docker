pipeline {
    agent any

    environment {
        EC2_test_IP = "35.159.23.172"
        EC2_prod_IP = "3.125.9.15"
    }

    stages {
        stage('Cleanup') {
            steps {
                echo 'Cleaning'
                sh 'rm -rf ci-cd'
            }
        }
        stage('Cloning git') {
            steps {
                echo 'Cloning'
                sh 'git clone https://github.com/liorfizz/ci-cd.git'
            }
        }
        stage('Build container plus CLNUP') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh 'docker image prune -a'
                    sh 'docker container prune -f'
                    sh 'pwd'
                    sh 'cd ci-cd/alpacaflask/ && docker build -t liorfizz/alpaca .'
                }
            }
        }
        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh 'docker push liorfizz/alpaca'
                }
            }
        }
        stage('deploy') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ssh-testing', keyFileVariable: 'SSH_PRIVATE_KEY')]) {
                    sshagent(['ssh-testing']) {
                        sh """
                        ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY ec2-user@${EC2_prod_IP} 'echo hello'
                        ssh -i $SSH_PRIVATE_KEY ec2-user@${EC2_prod_IP} 'pwd'
                        """
                    }
                }
            }
        }
    }
}
