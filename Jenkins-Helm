pipeline {
    agent any

    environment {
    }

    stages {
        stage('Clean and Clone git') {
            steps {
                sh '''
                rm -rf *
                git clone https://github.com/liorfizz/ci-cd.git
                '''
            }
        }

        stage('Build and Cleanup Container') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh 'echo "apply the script"'
                    sh 'cd ci-cd/alpacaflask && python3 pythonversioning.py'
                }
            }
        }

        stage('Package Helm and upload') {
            steps {
                script {
                    sh '''
                    cd ci-cd/my-chart
                    chmod +x Helm-version.sh
                    ./Helm-version.sh
                    '''
                }
            }
        }

        stage('Deploy Test Gcloud') {
            steps {
                script {
                    sh '''
                    gcloud container clusters get-credentials test-cluster --region=europe-central2
                    helm repo add my-chart-repo https://storage.googleapis.com/helmflask-bucket/
                    helm repo update
                    helm upgrade --install alpaca my-chart-repo/my-chart
                    '''
                }
            }
        }
        
        stage('Get External IP') {
            steps {
                script {
                    sh '''
                        kubectl get svc flask-app-service --no-headers | awk '{print $4}' > external_ip_qa.txt
                        externalIP=$(cat 'external_ip_qa.txt')
                        
                        while [ "$externalIP" = "<pending>" ]; do
                            rm external_ip_qa.txt
                            sleep 30  # Add a sleep duration in seconds, e.g., 5 seconds (you can adjust this as needed)
                            kubectl get svc flask-app-service --no-headers | awk '{print $4}' > external_ip_qa.txt
                            externalIP=$(cat 'external_ip_qa.txt')
                        done
                        
                        echo "...finishing deploy..."
                    '''
                }
            }
        }

        stage('Testing Q/A') {
            steps {
                script {
                    sh '''
                    externalIP=$(cat 'external_ip_qa.txt')
                    curl_output=$(curl -s -o /dev/null -w "%{http_code}" http://${externalIP}:5000)
                    if [ "$curl_output" -eq "200" ]; then
                        echo "Site is working (200 OK)"
                    else
                        echo "Error: Site is not working"
                        exit 1
                    fi
                    '''
                }
            }
        }

        stage('Shut Test Gcloud') {
            steps {
                script {
                    sh '''
                    gcloud container clusters get-credentials test-cluster --region=europe-central2
                    helm uninstall alpaca
                    '''
                }
            }
        }

        stage('Deploy Prod Gcloud') {
            steps {
                script {
                    sh '''
                       gcloud container clusters get-credentials flask-cluster --region=europe-central2
                       helm repo add my-chart-repo https://storage.googleapis.com/helmflask-bucket/
                       helm repo update
                       helm upgrade --install alpaca my-chart-repo/my-chart
                    '''
                }
            }
        }
    }
}
